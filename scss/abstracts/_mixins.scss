@use "variables" as *;

//Media query
@mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
            @content;
        }
    }
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.";
    }
}

//Img cover
@mixin img-cover {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

//Size
@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

//Flex
@mixin flex ($direction: column, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin font-style ($font-size, $font-weight: 400) {
    font-size: $font-size;
    font-weight: $font-weight;
}

@mixin before-background($height, $width, $before) {
    height: $height;
    position: relative;
    z-index: 1;

    &:before{
        content: '';
        display: block;
        height: $height;
        position: absolute;
        top: 0;
        left: 0;
        width: $width;
        z-index: 2;
        background: $before;

        @content;
    }
}